<?php

class SelectLexer{
    private $data;
    private $N;
    public $token;
    public $value;
    private $line;
    public $real;
    private $state = 1;
	
    function __construct($data) {
        $this->data = $data;
        $this->N = 0;
        $this->line = 1;
    }
/*!lex2php
%input $this->data
%counter $this->N
%token $this->token
%value $this->value
%line $this->line
PLUS = "+"
MINUS = "-"
TIMES = "*"
M_OR = "or"
M_AND = "and"
M_FUNCTION = "value()"
ALPHA_NUM = /[A-Z|a-z|_]+[0-9]*/
NUMERAL = /[0-9]*\.[0-9]+|[0-9]+/
LETERAL = /'([^']*)'/
LPAREN = "("
RPAREN = ")"
LBACKET = "["
RBACKET = "]"
EQUAL = "="
SLASH = "/"
ATMARK = "@"
LG = "<"
RG = ">"
M_REGEX = /<[^>]+>/
WHITESPACE = /[ \t\n]+/
*/

/*!lex2php
PLUS { $this->token=SelectParser::PLUS; }
MINUS { $this->token=SelectParser::MINUS; }
TIMES { $this->token=SelectParser::TIMES; }
M_REGEX { $this->token=SelectParser::M_REGEX; }
LG { $this->token=SelectParser::LG; }
RG { $this->token=SelectParser::RG; }
M_OR { $this->token=SelectParser::M_OR; }
M_AND { echo "AND\n";$this->token=SelectParser::M_AND; }
NUMERAL { $this->token=SelectParser::NUMERAL; }
LPAREN { $this->token=SelectParser::LPAREN; }
RPAREN { $this->token=SelectParser::RPAREN; }
LBACKET { $this->token=SelectParser::LBACKET; }
RBACKET { $this->token=SelectParser::RBACKET; }
M_FUNCTION { $this->token=SelectParser::M_FUNCTION; }
ALPHA_NUM {  $this->token=SelectParser::ALPHA_NUM; }
SLASH {  $this->token=SelectParser::SLASH; }
ATMARK { $this->token=SelectParser::ATMARK; }
LETERAL { echo "LETERAL\n"; $this->token=SelectParser::LETERAL; }
EQUAL { echo "EQUAL\n"; $this->token=SelectParser::EQUAL; }
WHITESPACE { return false; }
*/
}
